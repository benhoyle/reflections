When would you want to use a remote repository rather than keeping all your work local?

- Useful for sharing code with others. E.g. others can collaboration on projects.
- Also useful when using multiple computers. E.g. I have several Raspberry 
Pis and old Linux machines. I will often code on multiple machines. 
Using a remote repository allows me to stay in sync.

Why might you want to always pull changes manually rather than having Git 
automatically stay up-to-date with your remote repository?

It may be useful if another user makes changes to a remote repository 
that you do not want to apply locally. For example, you may be working on
a branch locally and you do not want this to be overwritten with changes
from the remote branch.

Describe the differences between forks, clones, and branches. 
When would you use one instead of another?

A branch is a set of one or more commits that differ from another set
of one or more commits (e.g. a master branch). You manually create a 
branch by using the 'git branch [new-branch]' command. You can then
switch between branches by using the 'git checkout [desired-branch]' 
command.

'Cloning' is the process of making a copy of a repository. Typically, this
is a remote repository. Cloning a repository creates a copy of the
repository on your local machine.

'Fork' refers to the process of cloning a repository on Github's servers.
'Forking' a repository allows you to refer back to the forked repository
without modifying the original forked files. Instead the forked repository
is cloned, i.e. a copy is create on GitHub's servers but under your 
account.
